/user/profile/check-nickname:
  get:
    tags:
      - User
    summary: 닉네임 중복검사
    parameters:
      - name: nickname
        in: query
        required: true
        schema:
          type: string
    responses:
      "200":
        description: 닉네임 사용 가능
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NicknameResponse"
      "400":
        description: 유효성 검사 실패 및 중복된 닉네임
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
            examples:
              validationFailed:
                value:
                  code: "VF"
                  message: "Validation failed."
              duplicateNickname:
                value:
                  code: "DN"
                  message: "Duplicated nickname."

/user/profile:
  post:
    tags:
      - User
    summary: 프로필 생성
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProfileRequest"
    responses:
      "200":
        description: 프로필 생성 성공
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileResponse"
      "400":
        description: 유효성 검사 실패
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
            examples:
              validationFailed:
                value:
                  code: "VF"
                  message: "Validation failed."
      "401":
        description: 인증 실패
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
            example:
              code: "AF"
              message: "Authorization Failed."

/user/profile/me:
  get:
    tags:
      - User
    summary: 유저 조회
    security:
      - bearerAuth: []
    responses:
      "200":
        description: 유저 정보 조회 성공
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserResponse"
      "401":
        description: 인증 실패
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
            example:
              code: "AF"
              message: "Authorization Failed."

  patch:
    tags:
      - User
    summary: 유저 정보 수정
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateUserRequest"
    responses:
      "200":
        description: 유저 정보 수정 성공
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserResponse"
      "400":
        description: 유효성 검사 실패
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
            examples:
              validationFailed:
                value:
                  code: "VF"
                  message: "Validation failed."
      "401":
        description: 인증 실패
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
            example:
              code: "AF"
              message: "Authorization Failed."

  delete:
    tags:
      - User
    summary: 회원 탈퇴
    security:
      - bearerAuth: []
    responses:
      "200":
        description: 회원 탈퇴 성공
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserResponse"
      "401":
        description: 인증 실패
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
            example:
              code: "AF"
              message: "Authorization Failed."
